
==================== FINAL INTERFACE ====================
2016-09-16 08:30:45.523766 UTC

interface main@main:Datastructures.ListSpec 8001
  interface hash: a1d9a5cec1d9bb03467f5353cc7aa728
  ABI hash: a0a6334f912fe212d01441319a41e9d6
  export-list hash: c71f49d9cbf81837012940184552c28b
  orphan hash: 126a67cc42028390b2b52e97750abd53
  flag hash: a8de15fad68c270f320a03cdab46c5ab
  sig of: Nothing
  used TH splices: False
  where
exports:
  Datastructures.ListSpec.main
  Datastructures.ListSpec.spec
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fpinhaskell-0.1.0.0@fpinhaskell-0.1.0.0-CxMX2dANF9I8SM5rbSJA9c
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hspec-2.2.3@hspec-2.2.3-3A7gcWeDS0m19mITkn1B7w
                      hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.3@quickcheck-io-0.1.3-5Hh2GbBZjnpHefdPBp5l4r
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-5zeeXxY3qb3AsPnIgczcsm
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.3@quickcheck-io-0.1.3-5Hh2GbBZjnpHefdPBp5l4r:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA:Test.QuickCheck a3636f7c6b928d0bf1ca94109fdc4fa1
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  fpinhaskell-0.1.0.0@fpinhaskell-0.1.0.0-CxMX2dANF9I8SM5rbSJA9c:Datastructures.List 995ba275ba959f9db2358d43a24c1bb1
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.3@hspec-2.2.3-3A7gcWeDS0m19mITkn1B7w:Test.Hspec 3008fc44f12ec19c4fa900e0137653ce
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Runner 034a881e6958254a4c0f2864bbd589c8
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Spec 32c482e5247461f70a13ee0ebc759327
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Spec.Monad 2e6f037f2b368cc99aa4cfff92adec68
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations ca5f5a50dd0587de1f261c5a819c188f
953771d404a7b7bd34dd58105dd4dccb
  $s$fEq[] :: GHC.Classes.Eq [GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  (GHC.Classes.$fEq[]_$c==
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger)
                  Datastructures.ListSpec.$s$fEq[]_$s$fEq[]_$c/= -}
3e22f6545fa3be15d7336184d9c74442
  $s$fEq[]_$s$fEq[]_$c/= ::
    [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [GHC.Integer.Type.Integer])
                   (y :: [GHC.Integer.Type.Integer]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ GHC.Integer.Type.Integer
                      GHC.Integer.Type.$fEqInteger
                      x
                      y)) -}
96f4fdab24ca022ef40adc6a18b866ea
  $s$fShow[] :: GHC.Show.Show [GHC.Integer.Type.Integer]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  Datastructures.ListSpec.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Datastructures.ListSpec.$s$fShow[]_$s$fShow[]_$cshow
                  Datastructures.ListSpec.$s$fShow[]_$s$fShow[]_$cshowList -}
3f717227aaf1b29b836862ea6863659e
  $s$fShow[]_$s$fShow[]_$cshow ::
    [GHC.Integer.Type.Integer] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Integer.Type.Integer]) ->
                 GHC.Show.$fShowInteger_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
acbb2931113f9586ef389164aa2aebbc
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[GHC.Integer.Type.Integer]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[GHC.Integer.Type.Integer]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [GHC.Integer.Type.Integer]
                   GHC.Show.$fShowInteger_$cshowList
                   eta
                   eta1) -}
4af812eca600842cd7349c5cc860029c
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [GHC.Integer.Type.Integer] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [GHC.Integer.Type.Integer])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.$fShowInteger_$cshowList eta eta1) -}
18a33274926a2003d33b98a47a34515d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Datastructures.ListSpec.$trModule2
                   Datastructures.ListSpec.$trModule1) -}
49e101371ed5e25759834606826b4ce0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Datastructures.ListSpec"#) -}
802dfe8a22d644a4361508ef67b097b4
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
7f3b27969079fa435d5620c0a5c45bf2
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Datastructures.ListSpec.main1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
583537dc04da44d925ed2225257840d3
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Options.defaultConfig
                        Datastructures.ListSpec.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
77c46cd556bb65275b75e563768a06e9
  main10 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
524557d5726547aa977a6bcfe7317826
  main11 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
6f44f28f9b60c50e6d4916b1e273df10
  main12 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (case GHC.Enum.enumDeltaToInteger1
                        Datastructures.ListSpec.main13
                        Datastructures.ListSpec.main10 of wild {
                   [] -> GHC.Types.[] @ GHC.Integer.Type.Integer : x xs -> xs }) -}
ce1e5b5c9606051920665f2ba1a75c5f
  main13 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
4bf18c4b650b2138c076c82c69ee5a04
  main14 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Datastructures.ListSpec.main22
                   Datastructures.ListSpec.main15
                   GHC.Stack.Types.EmptyCallStack) -}
dd23e9fb0789e270bba736702385bcfe
  main15 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Datastructures.ListSpec.main21
                   Datastructures.ListSpec.main20
                   Datastructures.ListSpec.main19
                   Datastructures.ListSpec.main18
                   Datastructures.ListSpec.main17
                   Datastructures.ListSpec.main18
                   Datastructures.ListSpec.main16) -}
3d90426071e87f888302faeab8a419e1
  main16 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
bf7989d5595467c21f1e508a238ada0a
  main17 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
2f0b4f9051f8f2f79c156b3fea9917cc
  main18 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 14#) -}
d42dfca26ca7188f9d438a348e8ea221
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/Datastructures/ListSpec.hs"#) -}
097332ed9f0cacc3b32d65db0b12a6bb
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Datastructures.ListSpec.main3 #)) -}
1dd9ab452ab251d5731090f09443da0a
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Datastructures.ListSpec"#) -}
81e4e136fdd0286dbe1efdf889a86c16
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
69a5b9b7dc816179324afc20a0c5b5e0
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
d541e3ac9b27987e9bbcbb40e3070bb5
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "should return tail"#) -}
020c1170cf81b1cd248d4421190bef15
  main24 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Datastructures.ListSpec.main25) -}
1b6e68063839551c3f75470ebb35bae9
  main25 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Datastructures.ListSpec.main30
                   Datastructures.ListSpec.main26
                   GHC.Stack.Types.EmptyCallStack) -}
43658cf36c80e3cc5cca011892f254d5
  main26 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Datastructures.ListSpec.main21
                   Datastructures.ListSpec.main20
                   Datastructures.ListSpec.main19
                   Datastructures.ListSpec.main29
                   Datastructures.ListSpec.main28
                   Datastructures.ListSpec.main29
                   Datastructures.ListSpec.main27) -}
c5f82caf80425d30cfdfa91a34a4de2e
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
bc317dc0ff5fe0ddac558b848e573c9e
  main28 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
6e2004634f6038130f7f6fcde8f37ff0
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
291df7e78442674fdd3aa2c210f791e3
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Datastructures.ListSpec.main4)) -}
633cc872f6e755a1daea9565e751f91d
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
0809b86a68b1341a3cac5feb4a785a02
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Datastructures.ListSpec.main33
                   Datastructures.ListSpec.main32) -}
9072eed540df99ddca32eb33321bc80a
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ail"#) -}
1dcab39c644fec237e748d0a017497ba
  main33 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'T'#) -}
663df1286e46c92c2d0aedf9209a4a2d
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Datastructures.ListSpec.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
601d222c49c34ee442a4d961cf746522
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Datastructures.ListSpec.main31
                   Datastructures.ListSpec.main6
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
14b63d4950ef14b9035fde49fdc3efca
  main6 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Datastructures.ListSpec.main7
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
62af390c2ff62b9e112409f51126a78d
  main7 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Datastructures.ListSpec.main24
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Datastructures.ListSpec.main23
                        Datastructures.ListSpec.main8
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
e29ffd0cf715322797a4dcc691eaf929
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ [GHC.Integer.Type.Integer]
                   Datastructures.ListSpec.main14
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Datastructures.ListSpec.$s$fShow[]
                   Datastructures.ListSpec.$s$fEq[]
                   Datastructures.ListSpec.main12
                   Datastructures.ListSpec.main9) -}
959ddedff20b6ee96e1bf39623a2da87
  main9 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (GHC.Enum.enumDeltaToInteger1
                   Datastructures.ListSpec.main11
                   Datastructures.ListSpec.main10) -}
2d06b8563d8da4ad64911d26ad17b08e
  spec :: Test.Hspec.Core.Spec.Monad.Spec
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Datastructures.ListSpec.main2
                  `cast`
                (Trans
                     (Sym (GHC.Types.N:IO[0]
                               <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                    <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N))
                          (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N))) -}
"SPEC/Datastructures.ListSpec $fEq[] @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                           GHC.Integer.Type.Integer)
  GHC.Classes.$fEq[] @ GHC.Integer.Type.Integer $dEq
  = Datastructures.ListSpec.$s$fEq[]
"SPEC/Datastructures.ListSpec $fEq[]_$c/= @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                                GHC.Integer.Type.Integer)
  GHC.Classes.$fEq[]_$c/= @ GHC.Integer.Type.Integer $dEq
  = Datastructures.ListSpec.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Datastructures.ListSpec $fShow[] @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                               GHC.Integer.Type.Integer)
  GHC.Show.$fShow[] @ GHC.Integer.Type.Integer $dShow
  = Datastructures.ListSpec.$s$fShow[]
"SPEC/Datastructures.ListSpec $fShow[]_$cshow @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                      GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshow @ GHC.Integer.Type.Integer $dShow
  = Datastructures.ListSpec.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Datastructures.ListSpec $fShow[]_$cshowList @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                          GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshowList @ GHC.Integer.Type.Integer $dShow
  = Datastructures.ListSpec.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Datastructures.ListSpec $fShow[]_$cshowsPrec @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                           GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshowsPrec @ GHC.Integer.Type.Integer $dShow
  = Datastructures.ListSpec.$s$fShow[]_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

